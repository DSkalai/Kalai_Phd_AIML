{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"BRATS2018","provenance":[{"file_id":"https://github.com/IAmSuyogJadhav/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization/blob/master/Example_on_BRATS2018.ipynb","timestamp":1646149005013}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"0Uld1IQgwKIL"},"source":["Note\n","- [Colab Only] Means the associated cell is required only if you are running the model on Google Colaboratory"]},{"cell_type":"markdown","metadata":{"id":"m-oHUemNtm59"},"source":["## Mount Drive [Colab Only]\n","Mount the google drive to access the dataset stored on drive."]},{"cell_type":"code","metadata":{"id":"zYkOcDYNtf-e","outputId":"fd58b90b-9413-4e4a-9571-02e6ed703386","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648617147008,"user_tz":-330,"elapsed":3259,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["from google.colab import drive\n","drive.mount('/gdrive')"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /gdrive; to attempt to forcibly remount, call drive.mount(\"/gdrive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["!ls /gdrive/MyDrive/ds/MICCAI_BraTS_2018_Data_Training.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RUYKCfsp32Gv","executionInfo":{"status":"ok","timestamp":1648617147008,"user_tz":-330,"elapsed":9,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}},"outputId":"6891ff40-acb2-4660-e8f0-fd9b6247bec6"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["/gdrive/MyDrive/ds/MICCAI_BraTS_2018_Data_Training.zip\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"9FaQc3z0J2qS","executionInfo":{"status":"ok","timestamp":1648615813264,"user_tz":-330,"elapsed":6,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Psq2s15_wlfJ"},"source":["## Extract the Dataset"]},{"cell_type":"code","metadata":{"id":"DuUurNXQtmXT","executionInfo":{"status":"ok","timestamp":1648617182782,"user_tz":-330,"elapsed":32188,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["import zipfile  # For faster extraction\n","dataset_path = \"/gdrive/MyDrive/ds/MICCAI_BraTS_2018_Data_Training.zip\"  # Replace with your dataset path\n","zfile = zipfile.ZipFile(dataset_path)\n","zfile.extractall()"],"execution_count":3,"outputs":[]},{"cell_type":"code","source":["!pip install h5py==2.10.0\n","!pip install -q -U tensorflow-addons==0.9.1 \n","!pip install tensorflow==2.1.0\n","!pip install keras==2.2.4"],"metadata":{"id":"9EP5LVowKXso"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip list tensorflow"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hPxW3_u7KnFh","executionInfo":{"status":"ok","timestamp":1648617184330,"user_tz":-330,"elapsed":1551,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}},"outputId":"be6efeb4-ede2-4df0-aff6-55cfb9551ec7"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Package                       Version\n","----------------------------- ---------------------\n","absl-py                       1.0.0\n","alabaster                     0.7.12\n","albumentations                0.1.12\n","altair                        4.2.0\n","appdirs                       1.4.4\n","argon2-cffi                   21.3.0\n","argon2-cffi-bindings          21.2.0\n","arviz                         0.11.4\n","astor                         0.8.1\n","astropy                       4.3.1\n","astunparse                    1.6.3\n","atari-py                      0.2.9\n","atomicwrites                  1.4.0\n","attrs                         21.4.0\n","audioread                     2.1.9\n","autograd                      1.3\n","Babel                         2.9.1\n","backcall                      0.2.0\n","beautifulsoup4                4.6.3\n","bleach                        4.1.0\n","blis                          0.4.1\n","bokeh                         2.3.3\n","Bottleneck                    1.3.4\n","branca                        0.4.2\n","bs4                           0.0.1\n","CacheControl                  0.12.10\n","cached-property               1.5.2\n","cachetools                    4.2.4\n","catalogue                     1.0.0\n","certifi                       2021.10.8\n","cffi                          1.15.0\n","cftime                        1.6.0\n","chardet                       3.0.4\n","charset-normalizer            2.0.12\n","click                         7.1.2\n","cloudpickle                   1.3.0\n","cmake                         3.12.0\n","cmdstanpy                     0.9.5\n","colorcet                      3.0.0\n","colorlover                    0.3.0\n","community                     1.0.0b1\n","contextlib2                   0.5.5\n","convertdate                   2.4.0\n","coverage                      3.7.1\n","coveralls                     0.5\n","crcmod                        1.7\n","cufflinks                     0.17.3\n","cupy-cuda111                  9.4.0\n","cvxopt                        1.2.7\n","cvxpy                         1.0.31\n","cycler                        0.11.0\n","cymem                         2.0.6\n","Cython                        0.29.28\n","daft                          0.0.4\n","dask                          2.12.0\n","datascience                   0.10.6\n","debugpy                       1.0.0\n","decorator                     4.4.2\n","defusedxml                    0.7.1\n","descartes                     1.1.0\n","dill                          0.3.4\n","distributed                   1.25.3\n","dlib                          19.18.0\n","dm-tree                       0.1.6\n","docopt                        0.6.2\n","docutils                      0.17.1\n","dopamine-rl                   1.0.5\n","earthengine-api               0.1.303\n","easydict                      1.9\n","ecos                          2.0.10\n","editdistance                  0.5.3\n","en-core-web-sm                2.2.5\n","entrypoints                   0.4\n","ephem                         4.1.3\n","et-xmlfile                    1.1.0\n","fa2                           0.3.5\n","fastai                        1.0.61\n","fastdtw                       0.3.4\n","fastprogress                  1.0.2\n","fastrlock                     0.8\n","fbprophet                     0.7.1\n","feather-format                0.4.1\n","filelock                      3.6.0\n","firebase-admin                4.4.0\n","fix-yahoo-finance             0.0.22\n","Flask                         1.1.4\n","flatbuffers                   2.0\n","folium                        0.8.3\n","future                        0.16.0\n","gast                          0.2.2\n","GDAL                          2.2.2\n","gdown                         4.2.2\n","gensim                        3.6.0\n","geographiclib                 1.52\n","geopy                         1.17.0\n","gin-config                    0.5.0\n","glob2                         0.7\n","google                        2.0.3\n","google-api-core               1.26.3\n","google-api-python-client      1.12.11\n","google-auth                   1.35.0\n","google-auth-httplib2          0.0.4\n","google-auth-oauthlib          0.4.6\n","google-cloud-bigquery         1.21.0\n","google-cloud-bigquery-storage 1.1.0\n","google-cloud-core             1.0.3\n","google-cloud-datastore        1.8.0\n","google-cloud-firestore        1.7.0\n","google-cloud-language         1.2.0\n","google-cloud-storage          1.18.1\n","google-cloud-translate        1.5.0\n","google-colab                  1.0.0\n","google-pasta                  0.2.0\n","google-resumable-media        0.4.1\n","googleapis-common-protos      1.56.0\n","googledrivedownloader         0.4\n","graphviz                      0.10.1\n","greenlet                      1.1.2\n","grpcio                        1.44.0\n","gspread                       3.4.2\n","gspread-dataframe             3.0.8\n","gym                           0.17.3\n","h5py                          2.10.0\n","HeapDict                      1.0.1\n","hijri-converter               2.2.3\n","holidays                      0.10.5.2\n","holoviews                     1.14.8\n","html5lib                      1.0.1\n","httpimport                    0.5.18\n","httplib2                      0.17.4\n","httplib2shim                  0.0.3\n","humanize                      0.5.1\n","hyperopt                      0.1.2\n","ideep4py                      2.0.0.post3\n","idna                          2.10\n","imageio                       2.4.1\n","imagesize                     1.3.0\n","imbalanced-learn              0.8.1\n","imblearn                      0.0\n","imgaug                        0.2.9\n","importlib-metadata            4.11.3\n","importlib-resources           5.4.0\n","imutils                       0.5.4\n","inflect                       2.1.0\n","iniconfig                     1.1.1\n","intel-openmp                  2022.0.2\n","intervaltree                  2.1.0\n","ipykernel                     4.10.1\n","ipython                       5.5.0\n","ipython-genutils              0.2.0\n","ipython-sql                   0.3.9\n","ipywidgets                    7.7.0\n","itsdangerous                  1.1.0\n","jax                           0.3.4\n","jaxlib                        0.3.2+cuda11.cudnn805\n","jedi                          0.18.1\n","jieba                         0.42.1\n","Jinja2                        2.11.3\n","joblib                        1.1.0\n","jpeg4py                       0.1.4\n","jsonschema                    4.3.3\n","jupyter                       1.0.0\n","jupyter-client                5.3.5\n","jupyter-console               5.2.0\n","jupyter-core                  4.9.2\n","jupyterlab-pygments           0.1.2\n","jupyterlab-widgets            1.1.0\n","kaggle                        1.5.12\n","kapre                         0.3.7\n","Keras                         2.2.4\n","Keras-Applications            1.0.8\n","Keras-Preprocessing           1.1.2\n","keras-vis                     0.4.1\n","kiwisolver                    1.4.0\n","korean-lunar-calendar         0.2.1\n","libclang                      13.0.0\n","librosa                       0.8.1\n","lightgbm                      2.2.3\n","llvmlite                      0.34.0\n","lmdb                          0.99\n","LunarCalendar                 0.0.9\n","lxml                          4.2.6\n","Markdown                      3.3.6\n","MarkupSafe                    2.0.1\n","matplotlib                    3.2.2\n","matplotlib-inline             0.1.3\n","matplotlib-venn               0.11.6\n","missingno                     0.5.1\n","mistune                       0.8.4\n","mizani                        0.6.0\n","mkl                           2019.0\n","mlxtend                       0.14.0\n","more-itertools                8.12.0\n","moviepy                       0.2.3.5\n","mpmath                        1.2.1\n","msgpack                       1.0.3\n","multiprocess                  0.70.12.2\n","multitasking                  0.0.10\n","murmurhash                    1.0.6\n","music21                       5.5.0\n","natsort                       5.5.0\n","nbclient                      0.5.13\n","nbconvert                     5.6.1\n","nbformat                      5.2.0\n","nest-asyncio                  1.5.4\n","netCDF4                       1.5.8\n","networkx                      2.6.3\n","nibabel                       3.0.2\n","nltk                          3.2.5\n","notebook                      5.3.1\n","numba                         0.51.2\n","numexpr                       2.8.1\n","numpy                         1.21.5\n","nvidia-ml-py3                 7.352.0\n","oauth2client                  4.1.3\n","oauthlib                      3.2.0\n","okgrade                       0.4.3\n","opencv-contrib-python         4.1.2.30\n","opencv-python                 4.1.2.30\n","openpyxl                      3.0.9\n","opt-einsum                    3.3.0\n","osqp                          0.6.2.post0\n","packaging                     21.3\n","palettable                    3.3.0\n","pandas                        1.3.5\n","pandas-datareader             0.9.0\n","pandas-gbq                    0.13.3\n","pandas-profiling              1.4.1\n","pandocfilters                 1.5.0\n","panel                         0.12.1\n","param                         1.12.0\n","parso                         0.8.3\n","pathlib                       1.0.1\n","patsy                         0.5.2\n","pep517                        0.12.0\n","pexpect                       4.8.0\n","pickleshare                   0.7.5\n","Pillow                        7.1.2\n","pip                           21.1.3\n","pip-tools                     6.2.0\n","plac                          1.1.3\n","plotly                        5.5.0\n","plotnine                      0.6.0\n","pluggy                        0.7.1\n","pooch                         1.6.0\n","portpicker                    1.3.9\n","prefetch-generator            1.0.1\n","preshed                       3.0.6\n","prettytable                   3.2.0\n","progressbar2                  3.38.0\n","prometheus-client             0.13.1\n","promise                       2.3\n","prompt-toolkit                1.0.18\n","protobuf                      3.17.3\n","psutil                        5.4.8\n","psycopg2                      2.7.6.1\n","ptyprocess                    0.7.0\n","py                            1.11.0\n","pyarrow                       6.0.1\n","pyasn1                        0.4.8\n","pyasn1-modules                0.2.8\n","pycocotools                   2.0.4\n","pycparser                     2.21\n","pyct                          0.4.8\n","pydata-google-auth            1.4.0\n","pydot                         1.3.0\n","pydot-ng                      2.0.0\n","pydotplus                     2.0.2\n","PyDrive                       1.3.1\n","pyemd                         0.5.1\n","pyerfa                        2.0.0.1\n","pyglet                        1.5.0\n","Pygments                      2.6.1\n","pygobject                     3.26.1\n","pymc3                         3.11.4\n","PyMeeus                       0.5.11\n","pymongo                       4.0.2\n","pymystem3                     0.2.0\n","PyOpenGL                      3.1.6\n","pyparsing                     3.0.7\n","pyrsistent                    0.18.1\n","pysndfile                     1.3.8\n","PySocks                       1.7.1\n","pystan                        2.19.1.1\n","pytest                        3.6.4\n","python-apt                    0.0.0\n","python-chess                  0.23.11\n","python-dateutil               2.8.2\n","python-louvain                0.16\n","python-slugify                6.1.1\n","python-utils                  3.1.0\n","pytz                          2018.9\n","pyviz-comms                   2.1.0\n","PyWavelets                    1.3.0\n","PyYAML                        3.13\n","pyzmq                         22.3.0\n","qdldl                         0.1.5.post0\n","qtconsole                     5.2.2\n","QtPy                          2.0.1\n","regex                         2019.12.20\n","requests                      2.23.0\n","requests-oauthlib             1.3.1\n","resampy                       0.2.2\n","rpy2                          3.4.5\n","rsa                           4.8\n","scikit-image                  0.18.3\n","scikit-learn                  1.0.2\n","scipy                         1.4.1\n","screen-resolution-extra       0.0.0\n","scs                           3.2.0\n","seaborn                       0.11.2\n","semver                        2.13.0\n","Send2Trash                    1.8.0\n","setuptools                    57.4.0\n","setuptools-git                1.2\n","Shapely                       1.8.1.post1\n","simplegeneric                 0.8.1\n","SimpleITK                     2.1.1\n","six                           1.15.0\n","sklearn                       0.0\n","sklearn-pandas                1.8.0\n","smart-open                    5.2.1\n","snowballstemmer               2.2.0\n","sortedcontainers              2.4.0\n","SoundFile                     0.10.3.post1\n","soupsieve                     2.3.1\n","spacy                         2.2.4\n","Sphinx                        1.8.6\n","sphinxcontrib-serializinghtml 1.1.5\n","sphinxcontrib-websupport      1.2.4\n","SQLAlchemy                    1.4.32\n","sqlparse                      0.4.2\n","srsly                         1.0.5\n","statsmodels                   0.10.2\n","sympy                         1.7.1\n","tables                        3.7.0\n","tabulate                      0.8.9\n","tblib                         1.7.0\n","tenacity                      8.0.1\n","tensorboard                   2.1.1\n","tensorboard-data-server       0.6.1\n","tensorboard-plugin-wit        1.8.1\n","tensorflow                    2.1.0\n","tensorflow-addons             0.9.1\n","tensorflow-datasets           4.0.1\n","tensorflow-estimator          2.1.0\n","tensorflow-gcs-config         2.8.0\n","tensorflow-hub                0.12.0\n","tensorflow-io-gcs-filesystem  0.24.0\n","tensorflow-metadata           1.7.0\n","tensorflow-probability        0.16.0\n","termcolor                     1.1.0\n","terminado                     0.13.3\n","testpath                      0.6.0\n","text-unidecode                1.3\n","textblob                      0.15.3\n","Theano-PyMC                   1.1.2\n","thinc                         7.4.0\n","threadpoolctl                 3.1.0\n","tifffile                      2021.11.2\n","tomli                         2.0.1\n","toolz                         0.11.2\n","torch                         1.10.0+cu111\n","torchaudio                    0.10.0+cu111\n","torchsummary                  1.5.1\n","torchtext                     0.11.0\n","torchvision                   0.11.1+cu111\n","tornado                       5.1.1\n","tqdm                          4.63.0\n","traitlets                     5.1.1\n","tweepy                        3.10.0\n","typeguard                     2.7.1\n","typing-extensions             3.10.0.2\n","tzlocal                       1.5.1\n","uritemplate                   3.0.1\n","urllib3                       1.24.3\n","vega-datasets                 0.9.0\n","wasabi                        0.9.0\n","wcwidth                       0.2.5\n","webencodings                  0.5.1\n","Werkzeug                      1.0.1\n","wheel                         0.37.1\n","widgetsnbextension            3.6.0\n","wordcloud                     1.5.0\n","wrapt                         1.14.0\n","xarray                        0.18.2\n","xgboost                       0.90\n","xkit                          0.0.0\n","xlrd                          1.1.0\n","xlwt                          1.3.0\n","yellowbrick                   1.4\n","zict                          2.1.0\n","zipp                          3.7.0\n"]}]},{"cell_type":"code","source":["# import tensorflow as tf"],"metadata":{"id":"VQPjDietLQJy","executionInfo":{"status":"ok","timestamp":1648616158177,"user_tz":-330,"elapsed":524,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"execution_count":12,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4NA9UG5zw938"},"source":["## Get required packages\n","- **SimpleITK**: For loading the dataset\n","- **[model.py](https://github.com/IAmSuyogJadhav/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization/)**: The model from BRATS2018 winning paper"]},{"cell_type":"code","metadata":{"id":"SqMFpmc6uCjQ","outputId":"6f0b3012-99d6-4c54-da54-45c8429b4d5e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648616646942,"user_tz":-330,"elapsed":3301,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["!pip install simpleitk\n","# !wget https://github.com/IAmSuyogJadhav/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization/raw/master/model.py\n","!wget https://github.com/FBehrad/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization/raw/master/model.py\n"],"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: simpleitk in /usr/local/lib/python3.7/dist-packages (2.1.1)\n","--2022-03-30 05:04:04--  https://github.com/FBehrad/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization/raw/master/model.py\n","Resolving github.com (github.com)... 140.82.121.4\n","Connecting to github.com (github.com)|140.82.121.4|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://raw.githubusercontent.com/FBehrad/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization/master/model.py [following]\n","--2022-03-30 05:04:05--  https://raw.githubusercontent.com/FBehrad/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization/master/model.py\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 16744 (16K) [text/plain]\n","Saving to: ‘model.py’\n","\n","model.py            100%[===================>]  16.35K  --.-KB/s    in 0s      \n","\n","2022-03-30 05:04:05 (72.0 MB/s) - ‘model.py’ saved [16744/16744]\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"09ARH9U4D2Wy"},"source":["## Imports and helper functions"]},{"cell_type":"code","source":["import SimpleITK as sitk  # For loading the dataset\n","import numpy as np  # For data manipulation\n","from model import build_model  # For creating the model\n","import glob  # For populating the list of files\n","from scipy.ndimage import zoom  # For resizing\n","import re  # For parsing the filenames (to know their modality)"],"metadata":{"id":"QAzBBgf559kv","executionInfo":{"status":"ok","timestamp":1648617188782,"user_tz":-330,"elapsed":4455,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"4uAsBShgB3v_","executionInfo":{"status":"ok","timestamp":1648616451343,"user_tz":-330,"elapsed":720,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":[""],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"nNNtloQ9B3sA","executionInfo":{"status":"ok","timestamp":1648617188782,"user_tz":-330,"elapsed":17,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["def read_img(img_path):\n","    \"\"\"\n","    Reads a .nii.gz image and returns as a numpy array.\n","    \"\"\"\n","    return sitk.GetArrayFromImage(sitk.ReadImage(img_path))"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"fEIRGXpdfssT","executionInfo":{"status":"ok","timestamp":1648617188783,"user_tz":-330,"elapsed":17,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["def resize(img, shape, mode='constant', orig_shape=(155, 240, 240)):\n","    \"\"\"\n","    Wrapper for scipy.ndimage.zoom suited for MRI images.\n","    \"\"\"\n","    assert len(shape) == 3, \"Can not have more than 3 dimensions\"\n","    factors = (\n","        shape[0]/orig_shape[0],\n","        shape[1]/orig_shape[1], \n","        shape[2]/orig_shape[2]\n","    )\n","    \n","    # Resize to the given shape\n","    return zoom(img, factors, mode=mode)\n","\n","\n","def preprocess(img, out_shape=None):\n","    \"\"\"\n","    Preprocess the image.\n","    Just an example, you can add more preprocessing steps if you wish to.\n","    \"\"\"\n","    if out_shape is not None:\n","        img = resize(img, out_shape, mode='constant')\n","    \n","    # Normalize the image\n","    mean = img.mean()\n","    std = img.std()\n","    return (img - mean) / std\n","\n","\n","def preprocess_label(img, out_shape=None, mode='nearest'):\n","    \"\"\"\n","    Separates out the 3 labels from the segmentation provided, namely:\n","    GD-enhancing tumor (ET — label 4), the peritumoral edema (ED — label 2))\n","    and the necrotic and non-enhancing tumor core (NCR/NET — label 1)\n","    \"\"\"\n","    ncr = img == 1  # Necrotic and Non-Enhancing Tumor (NCR/NET)\n","    ed = img == 2  # Peritumoral Edema (ED)\n","    et = img == 4  # GD-enhancing Tumor (ET)\n","    \n","    if out_shape is not None:\n","        ncr = resize(ncr, out_shape, mode=mode)\n","        ed = resize(ed, out_shape, mode=mode)\n","        et = resize(et, out_shape, mode=mode)\n","\n","    return np.array([ncr, ed, et], dtype=np.uint8)\n","    "],"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"piRsc9rYYRzl"},"source":["## Loading Data\n"]},{"cell_type":"code","metadata":{"id":"7adjWzdCuECK","executionInfo":{"status":"ok","timestamp":1648617188783,"user_tz":-330,"elapsed":16,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["# Get a list of files for all modalities individually\n","t1 = glob.glob('*GG/*/*t1.nii.gz')\n","t2 = glob.glob('*GG/*/*t2.nii.gz')\n","flair = glob.glob('*GG/*/*flair.nii.gz')\n","t1ce = glob.glob('*GG/*/*t1ce.nii.gz')\n","seg = glob.glob('*GG/*/*seg.nii.gz')  # Ground Truth"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"x_WhT40dzlHO"},"source":["Parse all the filenames and create a dictionary for each patient with structure:\n","\n","{<br />\n","    &nbsp;&nbsp;&nbsp;&nbsp;'t1': _<path to t1 MRI file&gt;_,<br />\n","    &nbsp;&nbsp;&nbsp;&nbsp;'t2': _<path to t2 MRI&gt;_,<br />\n","    &nbsp;&nbsp;&nbsp;&nbsp;'flair': _<path to FLAIR MRI file&gt;_,<br />\n","    &nbsp;&nbsp;&nbsp;&nbsp;'t1ce': _<path to t1ce MRI file&gt;_,<br />\n","    &nbsp;&nbsp;&nbsp;&nbsp;'seg': _<path to Ground Truth file&gt;_,<br />\n","}<br />"]},{"cell_type":"code","metadata":{"id":"4dssK9Nmwojp","executionInfo":{"status":"ok","timestamp":1648617188783,"user_tz":-330,"elapsed":16,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["pat = re.compile('.*_(\\w*)\\.nii\\.gz')\n","\n","data_paths = [{\n","    pat.findall(item)[0]:item\n","    for item in items\n","}\n","for items in list(zip(t1, t2, t1ce, flair, seg))]"],"execution_count":9,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wHqqrbnH0n2E"},"source":["## Load the data in a Numpy array\n","Creating an empty Numpy array beforehand and then filling up the data helps you gauge beforehand if the data fits in your memory.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"tBgbr-R-7Zat"},"source":["_Loading only the first 4 images here, to save time._"]},{"cell_type":"code","metadata":{"id":"nvbbddauz8ij","executionInfo":{"status":"ok","timestamp":1648617188783,"user_tz":-330,"elapsed":15,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["input_shape = (4, 80, 96, 64)\n","output_channels = 3\n","data = np.empty((len(data_paths[:4]),) + input_shape, dtype=np.float32)\n","labels = np.empty((len(data_paths[:4]), output_channels) + input_shape[1:], dtype=np.uint8)"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"G4u_yrMf30k4","outputId":"ca9c6321-ccb4-4b5b-a690-59443b20448f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648617210843,"user_tz":-330,"elapsed":22074,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["import math\n","\n","# Parameters for the progress bar\n","total = len(data_paths[:4])\n","step = 25 / total\n","\n","for i, imgs in enumerate(data_paths[:4]):\n","    try:\n","        data[i] = np.array([preprocess(read_img(imgs[m]), input_shape[1:]) for m in ['t1', 't2', 't1ce', 'flair']], dtype=np.float32)\n","        labels[i] = preprocess_label(read_img(imgs['seg']), input_shape[1:])[None, ...]\n","        \n","        # Print the progress bar\n","        print('\\r' + f'Progress: '\n","            f\"[{'=' * int((i+1) * step) + ' ' * (24 - int((i+1) * step))}]\"\n","            f\"({math.ceil((i+1) * 100 / (total))} %)\",\n","            end='')\n","    except Exception as e:\n","        print(f'Something went wrong with {imgs[\"t1\"]}, skipping...\\n Exception:\\n{str(e)}')\n","        continue"],"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Progress: [=========================](100 %)"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"x4gVVy9m8ywz","executionInfo":{"status":"ok","timestamp":1648617210845,"user_tz":-330,"elapsed":16,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"Do5Qlguw83Gb","executionInfo":{"status":"ok","timestamp":1648617210847,"user_tz":-330,"elapsed":17,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ojc7YgwC305t"},"source":["## Model"]},{"cell_type":"markdown","metadata":{"id":"uR_SDmgn4Lrd"},"source":["build the model"]},{"cell_type":"code","source":["from model import build_model\n","from tensorflow.keras.optimizers import Adam"],"metadata":{"id":"XKMVYVwz9i-0","executionInfo":{"status":"ok","timestamp":1648617070112,"user_tz":-330,"elapsed":2,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"id":"vI53S6yZJN2V","executionInfo":{"status":"ok","timestamp":1648617216077,"user_tz":-330,"elapsed":5247,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["model = build_model(input_shape=input_shape, output_channels=3)"],"execution_count":12,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"s1u107O74NOP"},"source":["Train the model"]},{"cell_type":"code","source":["# labels.astype('float32')\n","# data.dtype\n","_labels = labels.astype('float32')\n","# assert data.dtype == _l.dtype\n","# labels.dtype\n","_data=data.astype('uint8')\n","_data.dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FZk7Mo2UCofj","executionInfo":{"status":"ok","timestamp":1648617544393,"user_tz":-330,"elapsed":517,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}},"outputId":"2ac12898-d606-4e02-fb10-3926def1f533"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('uint8')"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# !pip install tensorflow==1.13.2\n","# !pip install keras==2.2.5"],"metadata":{"id":"s4V3n4kSQohf","executionInfo":{"status":"aborted","timestamp":1648451598623,"user_tz":-330,"elapsed":16,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# pip list"],"metadata":{"id":"0OPYxin7Psmt","executionInfo":{"status":"aborted","timestamp":1648451598625,"user_tz":-330,"elapsed":18,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"b0y7NfU4JBgi"},"source":["model.fit(data, [_labels, data], batch_size=1, epochs=1)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VlrqEF7m7ist"},"source":["That's it!"]},{"cell_type":"markdown","metadata":{"id":"ZKerVpLQTRck"},"source":["## Closing Regards"]},{"cell_type":"markdown","metadata":{"id":"bkSxJbRx4SsO"},"source":["If you are resizing the segmentation mask, the resized segmentation mask retains the overall shape, but loses a lot of pixels and becomes somewhat 'grainy'. See the illustration below."]},{"cell_type":"markdown","metadata":{"id":"eAau6Z7hznFC"},"source":["1. Original segmentation mask:"]},{"cell_type":"code","metadata":{"id":"CXRW65_hkL9n","executionInfo":{"status":"aborted","timestamp":1648451598626,"user_tz":-330,"elapsed":18,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["import matplotlib.pyplot as plt\n","img = (read_img(seg[0])[100] == 2).astype(np.uint8)\n","print(img.shape)\n","print(np.unique(img))\n","print(img.sum())\n","plt.imshow(img, cmap='Greys_r')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"soDTIJFn5CE9"},"source":["After resizing to (80, 96, 64)"]},{"cell_type":"code","metadata":{"id":"-kmgpXjsAMzj","executionInfo":{"status":"aborted","timestamp":1648451598627,"user_tz":-330,"elapsed":19,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["img = preprocess_label(read_img(seg[0]), out_shape=(80, 96, 64), mode='nearest')[1][50]\n","print(img.shape)\n","print(np.unique(img))\n","print(img.sum())\n","plt.imshow(img, cmap='Greys_r')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FiGSgdqA5LGd"},"source":["One can clearly notice that there are now a lot of black pixels in the region where there should have been only white pixels. This can potentially hurt our model. So, it is best to not resize the image too much. But, due to computational constraints and the model requirements, it is unavoidable. \n","\n","However, given below are a few things one could try to reduce the downsampling noise as much as possible."]},{"cell_type":"code","metadata":{"id":"01FtsxQi6dts","executionInfo":{"status":"aborted","timestamp":1648451598628,"user_tz":-330,"elapsed":20,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["import cv2"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vbflvVYqz2yu"},"source":["- Original Image > preprocess_label > Morphological Closing"]},{"cell_type":"code","metadata":{"id":"vFn6tiXPsUdl","executionInfo":{"status":"aborted","timestamp":1648451598629,"user_tz":-330,"elapsed":21,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["kernel = np.ones((3, 3))\n","img_closed = cv2.morphologyEx(img, cv2.MORPH_CLOSE, kernel, iterations=3)\n","print(np.unique(img_closed))\n","print(img_closed.sum())\n","plt.imshow(img_closed, cmap='Greys_r')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"17CKK5zQz7hs"},"source":["- Original Image > preprocess_label > Morphological Dilation"]},{"cell_type":"code","metadata":{"id":"bxhKa3kKtCLZ","executionInfo":{"status":"aborted","timestamp":1648451598630,"user_tz":-330,"elapsed":22,"user":{"displayName":"delan pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYOwYWJd1dvGcJSA9xwKyf3Bvql_VLNNFjVR6oJg=s64","userId":"06633365983321718906"}}},"source":["kernel = np.ones((3, 3))\n","img_dilated = cv2.dilate(img, kernel, iterations=1)\n","print(np.unique(img_dilated))\n","print(img_dilated.sum())\n","plt.imshow(img_dilated, cmap='Greys_r')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gG3vfTyS0BVe"},"source":["You could try these things to get even better results."]},{"cell_type":"markdown","metadata":{"id":"CX6Cj1VO6vrZ"},"source":["## Feedback"]},{"cell_type":"markdown","metadata":{"id":"ZPt_15Ps6vO1"},"source":["If you have any feedback, queries, bug reports to send, please feel free to [raise an issue](https://github.com/IAmSuyogJadhav/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization/issues/new) on github. It would be really helpful!"]}]}